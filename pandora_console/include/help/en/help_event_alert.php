<?php
/*
 * @package Include/help/en
 */
?>

<h1>Event Alerts</h1>

It is possible to define alerts on events, that allows to work from a completely new approach much more flexible. This is an Enterprise feature.<br>

To create the new event alerts, click on the Create button in the Event alerts menu from the Administration menu. <br><br>

 
<br><br>


<?php html_print_image('images/help/event01.png', false, ['width' => '250px']); ?>


<br>
An event alert is composed by different rules, linked between them by logical operators (and, or, xor, nand, nor, nxor).
<br><br>

<?php html_print_image('images/help/event02.png', false, ['width' => '550px']); ?>

<br>
To could work easier with them, the configuration parameters of an event alert are identical to the module alert. Here could be find a detailed explanation of any of them. There are only two specific parameters of the event alerts:
<br><br>
    <b>Rule evaluation mode:</b> There are two options Pass and Drop. Pass means that if a event fullfilled with a alert the alerts bellow are evaluated. Drop means that if a event fullfilled with a alert the alerts bellow stop to evaluated.  
<br><br>
    <b>Group by:</b> Allows to group the rules by agent, module, alert or group. For example, if a rule is configured to it fires when we receive two critical events, and it's grouped by agent, there should arrive two critical events from the same agent. It's possible to switch off.  
<br><br>
Each rule is configured to fire with an specific kind of event. The alert will be fired when the logical equation defined by the rules and its operators is fulfilled 
<br><br>


<?php html_print_image('images/help/event03.png', false, ['width' => '550px']); ?>

<br>

The configuration parameters of one rule that are possible are: 
<br><br>
    <b>Name:</b> Name of the rule.<br>
    <b>User comment:</b> Free comment. <br>
    <b>Event:</b> Regular expression that matches with the event text. <br>
    <b>Window: </b>The events that have been generated out of the time window will be rejected<br>
    <b>Count:</b> Number of events that have to match with the rule to it could be fired.<br>
    <b>Agent: </b>Regular expression that matches with the name of the agent that generated the event. <br>
    <b>Module:</b> Regular expression that matches with the name of the module that generated the event. <br>
    <b>Module alerts:</b> Regular expression that matches with the name of the alert that generated the event. <br>
    <b>Group: </b>Group the agent belongs to. <br>
    <b>Criticity:</b> Event criticity. <br>
    <b>Tag:</b> Tags associated to the event. <br>
    <b>User:</b> User associated to the event. <br>
    <b>Event type:</b> Kind of event.  <br><br>

For example, we could configure a rule that matches with the events generated by any module that is named cpu_load of any agent of the Servers group that has associated the tag System when the module goes to critical status:
<br><br>


<?php html_print_image('images/help/event04.png', false, ['width' => '550px']); ?>

<br>
<p>Given the high number of events that the <?php echo get_product_name(); ?> database could store, the server works on an event window that is defined in the pandora_server.conf configuration file through the parameter event_window. The events that have been generated out of this time window won't be processed by the server, so it doesn't make sense to specify in a rule a time window higher to the one configured in the server </p>


